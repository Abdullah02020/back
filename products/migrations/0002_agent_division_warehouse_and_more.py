# Generated by Django 5.0.11 on 2025-08-28 20:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pr_key', models.TextField(blank=True, null=True)),
                ('pr_exp', models.TextField(blank=True, null=True)),
                ('app_role_assignment_id', models.TextField(blank=True, null=True)),
                ('service_principal_id', models.TextField(blank=True, null=True)),
                ('role_id', models.TextField(blank=True, null=True)),
                ('user_id', models.TextField(blank=True, null=True)),
                ('account_status', models.CharField(blank=True, choices=[('Invitation', 'Invitation'), ('Active', 'Active'), ('Deactivated', 'Deactivated')], max_length=20, null=True)),
                ('zaad_code', models.TextField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True)),
                ('user_avatar', models.TextField(blank=True, null=True)),
                ('nonce', models.TextField(blank=True, null=True)),
                ('pp_exp', models.BigIntegerField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('date_created', models.BigIntegerField(blank=True, null=True)),
                ('default_landing_page', models.TextField(blank=True, null=True)),
                ('active_team', models.TextField(blank=True, null=True)),
                ('default_expand_mode', models.TextField(blank=True, null=True)),
                ('phone_number', models.TextField(blank=True, null=True)),
                ('full_name', models.TextField(blank=True, null=True)),
                ('account_type', models.CharField(max_length=20)),
                ('account_role', models.IntegerField(blank=True, null=True)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('pb_key', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('password_status', models.IntegerField(default=0)),
                ('one_time_pass_exp', models.BigIntegerField(blank=True, null=True)),
                ('one_time_pass', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agent',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60)),
                ('status', models.IntegerField()),
                ('supervisor', models.IntegerField()),
                ('last_modified', models.BigIntegerField(blank=True, null=True)),
                ('modified_by', models.IntegerField(editable=False)),
                ('no_reply_email', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_us_email', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.BigIntegerField(editable=False)),
            ],
            options={
                'db_table': 'division',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address_line1', models.CharField(max_length=60)),
                ('address_line2', models.CharField(blank=True, max_length=60, null=True)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zipcode', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description2', models.CharField(blank=True, max_length=255, null=True)),
                ('description3', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('date_created', models.BigIntegerField(editable=False)),
            ],
            options={
                'db_table': 'warehouse',
            },
        ),
        migrations.RenameField(
            model_name='product',
            old_name='active',
            new_name='status',
        ),
        migrations.RemoveField(
            model_name='product',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='product',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='product',
            name='date_created',
            field=models.BigIntegerField(blank=True, default=2, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='last_modified',
            field=models.BigIntegerField(default=1, editable=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='product',
            name='size',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='product',
            name='size_unit',
            field=models.CharField(choices=[('piece', 'piece'), ('g', 'g'), ('kg', 'kg'), ('ml', 'ml'), ('l', 'l')], default='piece', max_length=16),
        ),
        migrations.AlterField(
            model_name='product',
            name='category',
            field=models.CharField(choices=[('breads', 'breads'), ('cakes', 'cakes'), ('donuts', 'donuts'), ('pastries', 'pastries'), ('sandwich', 'sandwich')], max_length=100),
        ),
        migrations.AlterField(
            model_name='product',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterModelTable(
            name='product',
            table='product',
        ),
        migrations.AddField(
            model_name='product',
            name='created_by',
            field=models.ForeignKey(blank=True, db_column='created_by', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='product_created_by', to='products.agent'),
        ),
        migrations.AddField(
            model_name='product',
            name='modified_by',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='product_modified_by', to='products.agent'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address_line1', models.CharField(max_length=60)),
                ('address_line2', models.CharField(blank=True, max_length=60, null=True)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('zipcode', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description2', models.CharField(blank=True, max_length=255, null=True)),
                ('description3', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('date_created', models.BigIntegerField(editable=False)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.agent')),
            ],
            options={
                'db_table': 'branch',
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='division',
            field=models.ForeignKey(blank=True, db_column='division', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.division'),
        ),
        migrations.CreateModel(
            name='LoyaltyProgram',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description2', models.CharField(blank=True, max_length=255, null=True)),
                ('description3', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('date_created', models.BigIntegerField(editable=False)),
                ('frequency', models.CharField(max_length=30)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.agent')),
            ],
            options={
                'db_table': 'loyalty_program',
            },
        ),
        migrations.CreateModel(
            name='LoyaltyBenefits',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_period', models.BigIntegerField()),
                ('end_period', models.BigIntegerField()),
                ('period_type', models.CharField(choices=[('days', 'days'), ('weeks', 'weeks'), ('months', 'months')], default='days', max_length=32)),
                ('product', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('loyalty_program', models.ForeignKey(db_column='loyalty_program', on_delete=django.db.models.deletion.CASCADE, to='products.loyaltyprogram')),
            ],
            options={
                'db_table': 'loyalty_benefits',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description2', models.CharField(blank=True, max_length=255, null=True)),
                ('description3', models.CharField(blank=True, max_length=255, null=True)),
                ('discount_type', models.CharField(choices=[('percent', 'percent'), ('amount', 'amount')], default='percent', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_scope', models.CharField(choices=[('unit', 'per unit'), ('total', 'order total')], default='unit', max_length=10)),
                ('discount_qty', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('start_date', models.BigIntegerField(blank=True, null=True)),
                ('end_date', models.BigIntegerField(blank=True, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('date_created', models.BigIntegerField(editable=False)),
                ('frequency', models.CharField(blank=True, max_length=30)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.PROTECT, related_name='promotion_created_by', to='products.agent')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='promotion_modified_by', to='products.agent')),
                ('product', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
            ],
            options={
                'db_table': 'promotion',
            },
        ),
        migrations.CreateModel(
            name='PromotionCampaign',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150)),
                ('start_date', models.BigIntegerField()),
                ('end_date', models.BigIntegerField()),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('description2', models.CharField(blank=True, max_length=255, null=True)),
                ('description3', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('date_created', models.BigIntegerField(editable=False)),
                ('branch', models.ForeignKey(db_column='branch', on_delete=django.db.models.deletion.PROTECT, to='products.branch')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.agent')),
                ('promotion', models.ForeignKey(db_column='promotion', on_delete=django.db.models.deletion.PROTECT, to='products.promotion')),
            ],
            options={
                'db_table': 'campaign',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('contact_email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('last_modified', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.agent')),
            ],
            options={
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='SupplyChain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('date_created', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('last_modified', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.agent')),
            ],
            options={
                'db_table': 'supply_chain',
            },
        ),
        migrations.CreateModel(
            name='SupplierSupplyChain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lead_time_days', models.IntegerField(default=0)),
                ('contract_no', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.BigIntegerField(blank=True, null=True)),
                ('end_date', models.BigIntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(default=0)),
                ('status', models.CharField(default='Active', max_length=30)),
                ('date_created', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('last_modified', models.BigIntegerField(blank=True, editable=False, null=True)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.agent')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.supplier')),
                ('supply_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.supplychain')),
            ],
            options={
                'db_table': 'supplier_supply_chain',
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='supply_chains',
            field=models.ManyToManyField(related_name='suppliers', through='products.SupplierSupplyChain', to='products.supplychain'),
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.CharField(max_length=60, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=60, null=True, unique=True)),
                ('date_created', models.BigIntegerField(blank=True, null=True)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('modified_by', models.IntegerField(blank=True, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'tenants',
                'indexes': [models.Index(fields=['status'], name='idx_tenants_status'), models.Index(fields=['last_modified'], name='idx_tenants_last_modified')],
                'unique_together': {('name', 'domain', 'email')},
            },
        ),
        migrations.AddField(
            model_name='supplychain',
            name='tenant',
            field=models.ForeignKey(blank=True, db_column='tenant', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='suppliersupplychain',
            name='tenant',
            field=models.ForeignKey(blank=True, db_column='tenant', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='tenant',
            field=models.ForeignKey(blank=True, db_column='tenant', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unit_sold', models.IntegerField(default=1)),
                ('unit_price_snapshot', models.DecimalField(decimal_places=2, max_digits=12)),
                ('discount_value_applied', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_value_applied', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('currency', models.CharField(default='USD', max_length=10)),
                ('order_id', models.CharField(blank=True, max_length=64, null=True)),
                ('receipt_no', models.CharField(blank=True, max_length=64, null=True)),
                ('product_sku_snapshot', models.CharField(max_length=100)),
                ('product_name_snapshot', models.CharField(max_length=255)),
                ('branch_name_snapshot', models.CharField(max_length=255)),
                ('date_created', models.BigIntegerField(editable=False)),
                ('last_modified', models.BigIntegerField(editable=False)),
                ('branch', models.ForeignKey(db_column='branch', on_delete=django.db.models.deletion.PROTECT, to='products.branch')),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.PROTECT, related_name='sale_created_by', to='products.agent')),
                ('loyalty_benefits', models.ForeignKey(blank=True, db_column='benefits', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.loyaltybenefits')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sale_modified_by', to='products.agent')),
                ('product', models.ForeignKey(db_column='product', on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('promotion_campaign', models.ForeignKey(blank=True, db_column='campaign', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.promotioncampaign')),
                ('tenant', models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant')),
            ],
            options={
                'db_table': 'sales',
            },
        ),
        migrations.AddField(
            model_name='promotioncampaign',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='promotion',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='loyaltyprogram',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='loyaltybenefits',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('unit', models.IntegerField()),
                ('status', models.CharField(default='', max_length=255)),
                ('supply_chain', models.CharField(default='', max_length=255)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('product', models.ForeignKey(blank=True, db_column='product', null=True, on_delete=django.db.models.deletion.PROTECT, to='products.product')),
                ('tenant', models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant')),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.AddField(
            model_name='division',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='agent',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
        ),
        migrations.AddField(
            model_name='product',
            name='tenant',
            field=models.ForeignKey(db_column='tenant', default=1, on_delete=django.db.models.deletion.CASCADE, to='products.tenant'),
            preserve_default=False,
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['tenant'], name='idx_product_tenant'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='idx_pp_category'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['size'], name='idx_pp_size'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['size_unit'], name='idx_pp_size_unit'),
        ),
        migrations.AddField(
            model_name='warehouse',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.agent'),
        ),
        migrations.AddField(
            model_name='sales',
            name='warehouse',
            field=models.ForeignKey(blank=True, db_column='warehouse', null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.warehouse'),
        ),
        migrations.AddIndex(
            model_name='branch',
            index=models.Index(fields=['name', 'city'], name='idx_branch_name_city'),
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together={('name', 'address_line1', 'city', 'state', 'zipcode', 'country')},
        ),
        migrations.AddIndex(
            model_name='supplychain',
            index=models.Index(fields=['name'], name='idx_supplychain_name'),
        ),
        migrations.AddIndex(
            model_name='suppliersupplychain',
            index=models.Index(fields=['supplier'], name='idx_ssc_supplier'),
        ),
        migrations.AddIndex(
            model_name='suppliersupplychain',
            index=models.Index(fields=['supply_chain'], name='idx_ssc_chain'),
        ),
        migrations.AddIndex(
            model_name='suppliersupplychain',
            index=models.Index(fields=['status'], name='idx_ssc_status'),
        ),
        migrations.AlterUniqueTogether(
            name='suppliersupplychain',
            unique_together={('supplier', 'supply_chain')},
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['name'], name='idx_supplier_name'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['tenant'], name='idx_campaign_tenant'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['name'], name='idx_campaign_name'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['promotion'], name='idx_campaign_promo'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['branch'], name='idx_campaign_branch'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['start_date'], name='idx_campaign_start'),
        ),
        migrations.AddIndex(
            model_name='promotioncampaign',
            index=models.Index(fields=['end_date'], name='idx_campaign_end'),
        ),
        migrations.AlterUniqueTogether(
            name='promotioncampaign',
            unique_together={('name', 'promotion', 'branch', 'start_date', 'end_date')},
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['tenant'], name='idx_promo_tenant'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['product'], name='idx_promo_product'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['start_date'], name='idx_promo_start'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['end_date'], name='idx_promo_end'),
        ),
        migrations.AddIndex(
            model_name='loyaltybenefits',
            index=models.Index(fields=['tenant'], name='idx_lb_tenant'),
        ),
        migrations.AddIndex(
            model_name='loyaltybenefits',
            index=models.Index(fields=['loyalty_program'], name='idx_lb_program'),
        ),
        migrations.AddIndex(
            model_name='loyaltybenefits',
            index=models.Index(fields=['product'], name='idx_lb_product'),
        ),
        migrations.AddIndex(
            model_name='inventory',
            index=models.Index(fields=['tenant'], name='idx_inv_tenant'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['tenant'], name='idx_division_tenant'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['status'], name='idx_division_status'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['supervisor'], name='idx_division_supervisor'),
        ),
        migrations.AddIndex(
            model_name='division',
            index=models.Index(fields=['last_modified'], name='idx_division_last_modified'),
        ),
        migrations.AlterUniqueTogether(
            name='division',
            unique_together={('name', 'tenant')},
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['tenant'], name='idx_agent_tenant'),
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['division'], name='idx_agent_division'),
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['account_type'], name='idx_agent_acct_type'),
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['account_role'], name='idx_agent_acct_role'),
        ),
        migrations.AddIndex(
            model_name='agent',
            index=models.Index(fields=['last_modified'], name='idx_agent_last_modified'),
        ),
        migrations.AlterUniqueTogether(
            name='agent',
            unique_together={('username', 'full_name')},
        ),
        migrations.AddIndex(
            model_name='warehouse',
            index=models.Index(fields=['name', 'city'], name='idx_wh_name_city'),
        ),
        migrations.AlterUniqueTogether(
            name='warehouse',
            unique_together={('name', 'address_line1', 'city', 'state', 'zipcode', 'country')},
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['tenant'], name='idx_sales_tenant'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['branch'], name='idx_sales_branch'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['product'], name='idx_sales_product'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['date_created'], name='idx_sales_date'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['order_id'], name='idx_sales_order'),
        ),
        migrations.AddIndex(
            model_name='sales',
            index=models.Index(fields=['receipt_no'], name='idx_sales_receipt'),
        ),
    ]
